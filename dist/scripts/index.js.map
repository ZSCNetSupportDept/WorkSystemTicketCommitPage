{
	"version": 3,
	"sources": [
		"../../../../../../../../usr/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
		"../../src/scripts/api.js",
		"../../src/scripts/component_btn_value_binder.js",
		"../../src/scripts/confirm_dialog.js",
		"../../src/scripts/form.js",
		"../../src/scripts/index.js",
		"../../src/scripts/room_number_getter.js",
		"../../src/scripts/templates.js",
		"../../src/scripts/ticket_info_analyzer.js",
		"../../src/scripts/url.js"
	],
	"names": [],
	"mappings": "AAAA,wcCAA,AACA,CACA,QACA,SACA,WACA,cAeA,OACA,AACA,0CACA,0BACA,oCACA,AACA,AACA,kBACA,kDACA,AACA,MACA,IACA,AACA,AACA,AACA,AACA,AACA,gBACA,2BACA,SACA,0CACA,wBACA,wCACA,wFACA,OACA,EACA,gBACA,YACA,AACA,qBACA,AACA,qBACA,qCACA,UACA,KACA,IACA,CACA,AACA,CApDA,QACA,AACA,gBACA,QACA,AACA,aAgDA,+CA/CA,uEACA,iDAEA,AACA,AACA,AACA,AACA,EAyCA,AACA,yCA/CA,wBAgDA,iBACA,qBACA,AACA,EACA,mCClEA,AACA,AACA,CACA,oBACA,AACA,AACA,AACA,UAiCA,UACA,CACA,KAlCA,WACA,aAeA,cACA,wBACA,OACA,cACA,yBACA,gBACA,kCACA,oBACA,cACA,qCACA,8BACA,eACA,EACA,EACA,OA5BA,uCACA,AACA,yCACA,kBAGA,SACA,uCACA,UACA,uBACA,QACA,GACA,AACA,GATA,AACA,GAwBA,kCCvCA,AACA,AACA,CACA,WACA,CACA,AACA,QACA,sBACA,qBACA,sBACA,AACA,wBAmBA,gBAlBA,mBACA,gDACA,OACA,gCACA,SACA,WACA,EAaA,eAZA,cACA,gDACA,KACA,SACA,AACA,EAQA,0CAPA,EAQA,uDAPA,EAQA,kDAPA,AACA,AACA,0BAMA,AACA,4BCpCA,AACA,AACA,CAqDA,aACA,cACA,4CACA,WACA,CAxDA,gBACA,SACA,WACA,iDACA,wDACA,AACA,MACA,AACA,AACA,AACA,AACA,IA8CA,UACA,QA9CA,WACA,IACA,MAUA,oCATA,IAGA,KAFA,sBACA,cAEA,uCACA,SACA,kBACA,WACA,IAEA,AACA,AACA,AACA,AACA,OACA,aACA,GACA,mCACA,IAIA,KAHA,cACA,gBACA,UAEA,uCACA,SACA,yBACA,QACA,EACA,AACA,AACA,AACA,EAaA,WAZA,uBACA,AACA,AACA,AACA,mCCtDA,AACA,AACA,CACA,QACA,aACA,cACA,oCACA,kDACA,uCACA,AACA,eAiIA,oBAhIA,aA0BA,yBACA,kEACA,eACA,QACA,AACA,AACA,AACA,AACA,aA4DA,wBACA,qCACA,QACA,AACA,6BACA,iBACA,UACA,OACA,AACA,aACA,IACA,6BACA,8BACA,+CACA,IACA,AACA,AACA,AACA,AACA,cACA,mBACA,MACA,AACA,AACA,AACA,AACA,cACA,OACA,qHACA,QACA,AACA,AACA,mCA7HA,UACA,SACA,gBACA,AACA,oBACA,UACA,iDACA,mDACA,AACA,AACA,QACA,WACA,iBAkCA,aAoBA,CACA,OACA,qBACA,kJACA,CAvBA,OACA,OACA,AACA,6BACA,uDACA,mBACA,sBACA,mBACA,UACA,AACA,6BACA,0BAEA,OACA,sBACA,IACA,KAJA,MAKA,AACA,SAMA,AACA,AACA,AACA,AACA,AACA,OA/DA,iBAqBA,GACA,iCACA,0CACA,QACA,AACA,OAzBA,iBA0BA,OACA,oCACA,QACA,AACA,OA7BA,8BAuEA,2BACA,wCACA,aAEA,yBADA,IAEA,AACA,2BA5EA,UACA,AACA,AACA,4BACA,AACA,gBACA,AACA,AACA,mBAqDA,CACA,gCACA,oBACA,OACA,AACA,AACA,AACA,AACA,MAxCA,KAiFA,8PC1IA,AACA,AACA,AACA,AACA,AACA,CAiCA,UACA,CACA,cAlCA,WACA,AACA,AACA,AACA,OACA,AACA,AACA,sBACA,+EACA,AACA,AACA,AACA,eACA,4DACA,AACA,AACA,eACA,+CACA,AACA,AACA,AACA,oBACA,yEACA,AACA,AACA,AACA,eACA,6DACA,AACA,GACA,GACA,wBCrCA,AACA,AACA,CAIA,YACA,SACA,8CACA,SACA,sCACA,OACA,GACA,IACA,AACA,AACA,AACA,AACA,AACA,CAhBA,GACA,MACA,KAoBA,WACA,OANA,aACA,WACA,uBACA,EACA,wBCxBA,AACA,AACA,CAyDA,aACA,AACA,uDACA,MACA,oBACA,+CACA,MACA,kBACA,EACA,CACA,AACA,AACA,AACA,AACA,CACA,aACA,wDACA,wEACA,mEACA,AACA,qEACA,8DACA,sEACA,mCACA,AACA,2BACA,EACA,CACA,aACA,+DACA,MACA,4BACA,wEACA,MACA,kBACA,0EACA,MACA,oBACA,2BACA,0BACA,CACA,aACA,UACA,eACA,mEACA,iDACA,2BACA,sCACA,OACA,WACA,kCACA,AACA,OACA,AACA,AACA,AACA,AACA,CACA,aACA,IACA,AACA,uBACA,gCACA,GACA,EACA,AACA,AACA,AACA,AACA,CACA,aACA,IACA,uBACA,oCACA,OACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,EACA,CACA,2BACA,2BACA,sCACA,CApJA,uBACA,AACA,0BACA,CACA,0GACA,AACA,EACA,6CACA,AACA,EACA,oFACA,AACA,EACA,uJACA,AACA,EACA,sFACA,AACA,AACA,GACA,AACA,AACA,AACA,AACA,AACA,oDA4HA,UACA,SA5HA,WACA,AACA,AACA,AACA,AACA,IACA,AACA,wBACA,kCACA,6BACA,gBACA,wBACA,AACA,WACA,KAUA,4BATA,2BACA,AACA,+BACA,AACA,gCACA,AACA,cACA,AACA,GAEA,AACA,AACA,AACA,AACA,EAgGA,6EC1JA,AACA,CACA,MACA,AACA,UACA,CACA,AACA,oBACA,6BACA,AACA,gBACA,2BACA,AACA,kBACA,6BACA,AACA,yBACA,yCACA,AACA,OACA,AACA,qBAQA,aACA,oBACA,AACA,AACA,AACA,sCACA,QAOA,gCANA,AACA,AACA,sBACA,0BACA,AACA,qBAnBA,EACA,AACA,AACA,AACA,AACA,AACA",
	"file": "generated.js",
	"sourceRoot": "",
	"sourcesContent": [
		"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\nlet url = require('./url');\n\n(function API() {\n\tconst DEBUG_RESPONSE = true;\n\tconst CSRF_NAME = 'csrftoken=';\n\t\n\tlet logined = false;\n\tlet _csrf = '';\n\n\tfunction getStauts() { return request('is_login', null); }\n\tfunction login(loginInfo) { return request('login', Object.assign({}, loginInfo, { longtime: false })); }\n\tfunction logout() { return request('logout', null); }\n\tfunction commit(commitInfo) { return request('work_order_add', commitInfo); }\n\n\t/**\n\t * @param {APIResponseStatus} data \n\t */\n\tfunction updateCSRF(data) {\n\t\tlet newCSRF = '';\n\t\t//优先从Cookies中拿\n\t\tdocument.cookie && document.cookie.split(';')\n\t\t\t.filter(cookie => cookie.trim().startsWith(CSRF_NAME))\n\t\t\t.map(cookie => newCSRF = cookie.slice(CSRF_NAME.length));\n\t\t\n\t\t//没有从Cookie中拿到就从返回结果中拿\n\t\tif (!newCSRF && data && data.csrf_token)\n\t\t\tdocument.cookie = `${CSRF_NAME}${newCSRF = data.csrf_token}`;\n\t\t\n\t\t_csrf = newCSRF || _csrf;\n\t}\n\t/**\n\t * @param {URLName} name \n\t * @param {Object} data \n\t * @returns  \n\t */\n\tfunction request(name, data) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet options = url.createRequestOptions(name, _csrf);\n\t\t\tdata && (options.data = JSON.stringify(data));\n\t\t\toptions.success = onResponse(name, resolve);\n\t\t\toptions.error = xhr => (console.error(xhr), reject('无法连接到服务器!(服务器异常)'));\n\t\t\t$.ajax(options);\n\t\t});\t\n\t}\n\tfunction onResponse(name, resolve) {\n\t\treturn (data) => {\n\t\t\tif (DEBUG_RESPONSE)\n\t\t\t\tconsole.log(`API ${name} response:\\n`, data);\n\t\t\t//刷新登录状态\n\t\t\tif (data && typeof data.is_login != 'undefined')\n\t\t\t\tlogined = data.is_login;\n\t\t\tupdateCSRF(data);\n\t\t\tresolve(data);\n\t\t};\t\n\t}\n\n\tmodule.exports = {\n\t\tgetStauts, login, commit, logout, \n\n\t\tget isLogin() { return logined; },\n\t\tset csrf(csrf) { _csrf = csrf;},\n\t\tget csrf() { return _csrf;}\n\t};\n})();\n",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\n\nlet { isValueTag } = require('./form');\n\n/**\n * @param {JQuery} $block \n */\nfunction init($block) {\n\tlet defaultStyle = `btn-outline-secondary`,\n\t\tselectedStyle = color => `btn-${color}`;\n\n\t$block.find('[data-bind]').off('click').on('click', onDataBindButtonClick);\n\tupdateDataBindButtonHighlight();\n\n\tfunction onDataBindButtonClick() {\n\t\tlet $this = $(this),\t\n\t\t\t$target = $block.find(`[name=\"${$this.data('bind')}\"]`),\n\t\t\tv = $this.text();\n\t\tisValueTag($target) ? $target.val(v) : $target.text(v);\n\t\tupdateDataBindButtonHighlight();\n\t}\n\n\tfunction updateDataBindButtonHighlight() {\n\t\tlet $fields = $block.find(`[name]`);\n\t\t$fields.each((i, e) => {\n\t\t\tlet $field = $(e),\n\t\t\t\tfName = $field.attr('name'),\n\t\t\t\tv = isValueTag($field) ? $field.val() : $field.text(),\n\t\t\t\tcolor = $field.data('color'),\n\t\t\t\t$btns = $block.find(`[data-bind=\"${fName}\"]`);\n\t\t\t$btns.each((i, e) => {\n\t\t\t\tlet $btn = $(e), style = selectedStyle(color);\n\t\t\t\t$btn.text() == v ? ($btn.removeClass(defaultStyle), $btn.addClass(style))\n\t\t\t\t\t: ($btn.addClass(defaultStyle), $btn.removeClass(style));\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = {\n\tinit\n};",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\n\n(function () {\n\tlet isShowing = false;\n\n\tlet $txtInput = $('#txtTicketDesc'),\n\t\t$blockConfirm = $('#blockConfirm'),\n\t\t$alertCommitSuccess = $('#commitSuccess'),\n\t\t$btnCommit = $('#btnCommit');\n\t\n\tfunction show() {\n\t\t$txtInput.attr('disabled', 'disabled');\n\t\t$('.hide-on-confirm').css('opacity', 0.4);\n\t\t$alertCommitSuccess.hide();\n\t\t$btnCommit.removeAttr('disabled').show();\n\t\t$blockConfirm.slideDown();\n\t}\n\tfunction hide() {\n\t\t$txtInput.removeAttr('disabled');\n\t\t$('.hide-on-confirm').css('opacity', 1);\n\t\t$blockConfirm.slideUp();\n\t}\n\t\n\tfunction commitSuccess() { $btnCommit.hide(); $alertCommitSuccess.show();}\n\tfunction commitFailed() { $btnCommit.removeAttr('disabled').show(); }\n\tfunction commiting() { $btnCommit.attr('disabled', 'disabled'); }\n\t\n\n\tmodule.exports = {\n\t\tshow, hide,\n\t\tcommitSuccess,\n\t\tcommitFailed,\n\t\tcommiting,\n\t\tget isShowing() { return isShowing; }\n\t};\n})();",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\n\nlet convertor = (function generateConvertor(){\n\tconst CHINA = `中国`;\n\treturn {\n\t\tadd_china_prefix: v => v.startsWith(CHINA) ? v : `${CHINA}${v}`,\n\t\tremove_china_prefix: v => v.startsWith(CHINA) ? v.replace(CHINA, '') : v\n\t};\n})();\n\n/**\n * @param {JQuery} $form\n * @return {Object}\n */\nfunction encode($form) {\n\tlet result = {};\n\t$form.find('[name]').each((i, ele) => {\n\t\tlet $input = $(ele),\n\t\t\tv = hasValAttr($input) ? $input.val() : $input.text(),\n\t\t\tconvert;\n\t\tif ($input.data('ignore')) return;\n\t\tif ((convert = $input.data('convert-get')) && convertor[convert])\n\t\t\tv = convertor[convert](v);\n\t\tresult[$input.attr('name')] = v;\n\t});\n\treturn result;\n}\n\n/**\n * @param {JQuery} $form \n * @param {Object} data \n */\nfunction fill($form, data) {\n\tdata = data || {};\n\t$form.find('[name]').each((i, ele) => {\n\t\tlet $input = $(ele),\n\t\t\tkey = $input.attr('name'),\n\t\t\tv = (data[key] || ''),\n\t\t\tconvert;\n\t\tif ($input.data('ignore')) return;\n\t\tif ((convert = $input.data('convert-set')) && convertor[convert])\n\t\t\tv = convertor[convert](v);\n\t\thasValAttr($input) ? $input.val(v) : $input.text(v);\n\t});\n}\n\n/**\n * @param {JQuery} $dom \n */\nfunction isValueTag($dom) { return hasValAttr($dom); }\n\n/**\n * @param {JQuery} $dom \n */\nfunction hasValAttr($dom) { \n\tlet tagName = $dom.prop('tagName');\n\treturn tagName == 'INPUT' || tagName == 'TEXTAREA' || tagName == 'SELECT'; \n}\n\nmodule.exports = {\n\tencode, fill, isValueTag\n};",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\n\nlet api = require('./api'),\n\tform = require('./form'),\n\tBindableButtons = require('./component_btn_value_binder'),\n\tConfirmDialog = require('./confirm_dialog'),\n\t{ analyze, ticketTypeMap } = require('./ticket_info_analyzer'),\n\t{ render } = require('./templates');\n\nlet App = function () {\n\tlet showLoginError = msg => $form.login_err_msg.show().text(msg),\n\t\tdelayDumpToken = null,\n\t\t$txtDump = $('#txtDump'),\n\t\t$txtInput = $('#txtTicketDesc');\n\n\tlet $form = {\n\t\tcommit: $('#formCommit'),\n\t\tget login() { return $('#formLogin'); },\n\t\tget login_err_msg() { return $('#formLogin .alert');}\n\t};\n\n\tthis.api = api;\n\tthis.commit = commit;\n\tthis.login = login;\n\tthis.logout = logout;\n\tthis.onTicketDescChange = onTicketDescChange;\n\tthis.hideConfirmDialog = ConfirmDialog.hide;\n\tthis.previewTicketBeforeCommit = previewTicketBeforeCommit;\n\t\n\t//启动时刷新一次用户信息\n\tgetUserInfo();\n\n\t$(document).keydown(onDocumentKeydown);\n\n\n\tfunction getUserInfo() {\n\t\tapi.getStauts().then(status => {\n\t\t\t$('#blockUserInfo').html(render('block_user_info_' + (status.is_login ? 'info' : 'login'), status));\n\t\t}).catch(onApiError);\n\t}\n\n\t/**\n\t * @param {Event} event \n\t */\n\tfunction login(event) {\n\t\tevent.preventDefault();\n\t\t$form.login_err_msg.hide();\n\t\tapi.login(form.encode($form.login)).then(onGetLoginLogoutResponse).catch(showLoginError);\n\t}\n\n\tfunction logout() {\n\t\tevent.preventDefault();\n\t\tapi.logout().then(onGetLoginLogoutResponse).catch(onApiError);\n\t}\n\n\tlet commiting = false;\t\n\tfunction commit() {\n\t\tif (commiting) return;\n\t\tcommiting = true;\n\t\tConfirmDialog.commiting();\n\n\t\tlet info = form.encode($form.commit);\n\t\tinfo.situation_order = (ticketTypeMap[info.situation_order_string] || 1);\n\t\tinfo.introduction = info.introduction;\n\t\tinfo.area = info.work_area;\n\t\tinfo.status = 0;\n\t\tconsole.log(info);\n\n\t\tapi.commit(info).then(data => {\n\t\t\tif (!data || !data.success) return failed();\n\t\t\tcommiting = false;\n\t\t\tConfirmDialog.commitSuccess();\n\t\t\t$txtInput.val('');\n\t\t\tgetUserInfo();\n\t\t}).catch(failed);\n\n\t\tfunction failed() {\n\t\t\tcommiting = false;\n\t\t\tConfirmDialog.commitFailed();\n\t\t\talert('录入失败!\\n请检查各个字段填写正确,描述没有超过长度!');\n\t\t}\n\t}\n\n\n\t/**\n\t * @param {KeyboardEvent} event \n\t */\t\n\tfunction onDocumentKeydown(event) {\n\t\tif (!event) return;\t\t\n\t\tlet key = event.which || event.keyCode || 0;\n\t\tif (key == 27) return ConfirmDialog.hide(); //ESC\n\t}\t\n\n\t/**\n\t * @param {KeyboardEvent} event \n\t */\t\n\tfunction onTicketDescChange(event) {\n\t\tlet key = event.which || event.keyCode || 0;\n\t\tif (key == 13 && event.ctrlKey && !event.altKey && !event.shiftKey)\n\t\t\treturn event.preventDefault(), previewTicketBeforeCommit();\n\t\tshowDumpInfo();\n\t}\n\n\tfunction previewTicketBeforeCommit() {\n\t\tif (!api.isLogin) return showLoginError('请先登录!');\n\t\tlet desc = $txtInput.val();\n\t\tif (!desc.trim()) return;\n\t\t\n\t\tform.fill($form.commit, analyze($txtInput.val()));\n\t\tBindableButtons.init($form.commit);\n\t\tConfirmDialog.show();\n\t}\n\n\tfunction showDumpInfo() {\n\t\tdelayDumpToken && clearTimeout(delayDumpToken);\n\t\tdelayDumpToken = setTimeout(() =>\n\t\t\t$txtDump.text(JSON.stringify(analyze($txtInput.val()),\n\t\t\t\t(k, v) => k == 'introduction' ? '...' : v, '  ')), 200);\n\t}\n\t\n\t/**\n\t * @param {APIResponseStatus} response \n\t */\n\tfunction onGetLoginLogoutResponse(response) {\n\t\tresponse.success ? getUserInfo() : showLoginError(response.error);\n\t}\n\n\t/**\n\t * @param {string|Error} errInfo \n\t */\t\n\tfunction onApiError(errInfo) {\n\t\talert('服务器异常!\\n详细信息请查看控制台输出');\n\t\tconsole.error(errInfo);\n\t}\n\n\t\n};\n\nglobal.app = new App();",
		"//@ts-check\n\n/**\n * @param {string} text \n * @returns {string}\n */\nfunction getRoomNumber(text) {\n\t/**\n\t * @type {string[]|null}\n\t */\n\tlet match = null;\n\t//A单元0523床03\n\t//A栋1121\n\tmatch = text.match(/([A-Da-d])(?:单元|栋)?[\\/\\\\\\-\\s]*([01]?\\d{3})(床0?[1-4])?\\b/);\n\tif (match) return match[1] + match[2] + (match[3] || '');\n\n\t//朝晖苑\n\t//1111房-2床\n\tmatch = text.match(/([01]?\\d{3})(?:房-|房|-)(0?\\d)床?\\b/);\n\tif (match) return match[1] + '房' +(match[2] || '');\n\n\t//朝晖苑只有宿舍号的情况\t\n\tmatch = text.match(/\\b(1?\\d{3})(?:房)?\\b/);\n\tif (text.match(/朝晖苑/) && match) return match[1] + '房';\n\n\t//凤翔:\n\t//4栋/508-4\n\tmatch = text.match(/\\b([1-6])栋[\\/\\\\\\-\\s]*(\\d{3})(-?[1-4])?\\b/);\n\tif (match) return match[1] + '栋' + match[2] + (match[3] || '');\n\t\n\t//11-345\n\t//12栋234\n\tmatch = text.match(/\\b([7-9]|[12]\\d)\\s*(?:栋|\\-)\\s*(\\d{3})\\b/);\n\tif (match) return match[1] + '栋' + match[2];\n\t\n\treturn '';\n}\n\nmodule.exports = {\n\tgetRoomNumber\n};",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\n\nlet templates = {};\nlet hadInit = false;\n\nfunction init() {\n\tlet $tmpl = $('script[type=\"text/template\"]');\n\t$tmpl.each(i => {\n\t\tlet $t = $tmpl.eq(i);\n\t\ttemplates[$t.data('tmpl')] = ejs.compile($t.html());\n\t});\n\thadInit = true;\n}\n\n/**\n * @param {string} name \n * @param {Object} data \n * @returns {string}\n */\nfunction render(name, data) {\n\thadInit || init();\n\treturn name in templates ? templates[name](data || {}) : \"\";\n}\n\nmodule.exports = { render };\n",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\n\nlet { getRoomNumber } = require('./room_number_getter');\n\nlet keywords = {\n\tnew_account: ['上门安装', '安装', '新装', '报装'],\n\tnew_account_atleast: 2,\n\n\tuser_fuck: ['投诉'],\n\tuser_fuck_atleast: 1,\n\n\tfrom_cmcc_important: ['CMCC', '移动工单'],\n\tfrom_cmcc_important_atleast: 1,\n\n\tfrom_cmcc: ['移动工单', '感知平台', '家庭宽带业务', '10086', '重启MODEM'],\n\tfrom_cmcc_atleast: 2,\n\n\tfrom_unicom: ['@16900.gd', 'ZSZJLAN', '张琳', '联通'],\n\tfrom_unicom_atleast: 1\n}\n\nlet ticketType = ['', '工单', '新装', '投诉'],\n\tticketTypeMap = {'工单': 1, '新装': 2, '投诉': 3};\n\n/**\n * @param {string} text\n * @returns {APIRequestCommitTicket}\n */\nfunction analyze(text) {\n\t/**\n\t * @type {APIRequestCommitTicket}\n\t */\n\t//@ts-ignore\n\tlet result = {};\n\t\n\tresult.situation_order = getTicketType(text);\n\tresult.situation_order_string = ticketType[result.situation_order];\n\tresult.work_area = getWorkArea(text);\n\tresult.operator = getOperator(text);\n\tresult.dormitory_number = getRoomNumber(text);\n\n\tlet phone = getPhoneNumbers(text);\n\tresult.telephone_number = phone.main;\n\tresult.more_phone_number = phone.other;\n\t\n\tresult.account_number = getAccount(text) || result.telephone_number;\n\n\tresult.introduction = getIntroduction(text);\n\t\n\tresult.status = 0;\n\n\treturn result;\n}\n\n/**\n * @param {string} text \n * @returns {number}\n */\nfunction getTicketType(text) {\n\t//1公单 2新装 3投诉\n\tif (keywords.new_account.map(v => hasSubString(text, v)).map(bool2num).reduce(APlusB, 0)\t\n\t\t>= keywords.new_account_atleast)\n\t\treturn 2;//新装\t\n\tif (keywords.user_fuck.map(v => hasSubString(text, v)).map(bool2num).reduce(APlusB, 0)\n\t\t>= keywords.user_fuck_atleast)\n\t\treturn 3;//投诉\n\treturn 1; //工单\n}\n\n/**\n * @param {string} text \n * @returns {string}\n */\nfunction getWorkArea(text) {\n\tif (hasSubString(text, '6期公寓') || hasSubString(text, '朝晖')) return '朝晖苑';\n\tif (hasSubString(text, '香晖苑') || text.match(/\\b[A-Da-d]单元/) ) return '香晖苑';\n\tif (hasSubString(text, '凤翔') || text.match(/\\b[1-6](栋|\\-)/)) return '凤翔';\n\n\tif (hasSubString(text, '北门') || text.match(/\\b([7-9]|1[01])(栋|\\-)/)) return '北门';\n\tif (hasSubString(text, '岐头') || text.match(/\\b1[6-9](栋|\\-)/)) return '岐头';\n\tif (hasSubString(text, '东门') || text.match(/\\b(1[2-5]|20|21)(栋|\\-)/)) return '东门';\n\tif (hasSubString(text, '别墅')) return '香山别墅';\n\n\treturn '';\n}\n\nfunction getOperator(text) {\n\tif (keywords.from_cmcc_important.map(v => hasSubString(text, v)).map(bool2num).reduce(APlusB, 0)\t\n\t\t>= keywords.from_cmcc_important_atleast)\n\t\treturn '中国移动';\n\tif (keywords.from_cmcc.map(v => hasSubString(text, v)).map(bool2num).reduce(APlusB, 0)\t\n\t\t>= keywords.from_cmcc_atleast)\n\t\treturn '中国移动';\n\tif (keywords.from_unicom.map(v => hasSubString(text, v)).map(bool2num).reduce(APlusB, 0)\t\n\t\t>= keywords.from_unicom_atleast)\n\t\treturn '中国联通';\n\treturn '中国电信';\n}\n\nfunction getPhoneNumbers(text) {\n\tlet count = {}, countArr = [];\n\tlet match = text.match(/1(?:[358]\\d|4[57]|7[678])\\d{8}/g);\n\tif (!match || !match.length) return { main: '', other: [] };\n\tmatch.map(phone => (count[phone] = (count[phone] || 0) + 1));\n\tfor (let phone in count) countArr.push({ phone, count: count[phone] });\n\tcountArr.sort((a, b) => b.count - a.count);\n\treturn {\n\t\tmain: countArr[0].phone,\n\t\tother: countArr.slice(1).map(it => it.phone)\n\t};\n}\n\n/**\n * @param {string} text \n * @returns {string}\n */\nfunction getAccount(text) {\n\tlet match = [];\n\t//移动/联通\n\tif ((match = text.match(/\\w+@(?:(?:139|16900)\\.gd)/)))\n\t\treturn match[0];\n\treturn '';\n}\n\n/**\n * @param {string} text \n * @returns  {string}\n */\nfunction getIntroduction(text) {\n\tlet match = [];\n\tif ((match = text.match(/.+\\b(.+?)(小姐|同学|先生)/)))\n\t\treturn (match[1] + match[2]).trim();\n\treturn '';\n\t//下面这样可能会超长\n\t// text.replace(/\\s/g, ' ')\n\t// \t.replace(/CMCC\\-[\\w\\-]+/g, '')\n\t// \t.replace(/中山市[\\s\\S]+?电子科大学生公寓/g, '')\n\t// \t.replace(/中山市[\\s\\S]+?石岐区/g, '')\n\t// \t.replace(/已建议客户单机测试/g, '')\n\t// \t.replace(/但是用户不配合在线排障/g, '')\n\t// \t.replace(/请跟进\\S+?谢谢/g, '')\n\t// \t.replace(/石岐区/g, '')\n\t// \t.replace(/校园宿舍/g, '')\n\t// \t.replace(/，+/g, '，')\n\t// \t.replace(/[（\\(]\\S+?10086\\S+?[\\)）]/g, '')\n}\n\nfunction bool2num(v) { return v ? 1 : 0; }\nfunction APlusB(a, b) { return a + b; }\nfunction hasSubString(str, subString) { return str.indexOf(subString) >= 0; }\n\nmodule.exports = {\n\tanalyze, ticketTypeMap\n};",
		"//@ts-check\n/// <reference path=\"type.d.ts\" />\nlet base = '/work';\n\nlet URL = {\n\tbase,\n\n\tis_login: `${base}/is_login/`,\n\tis_login_method: 'GET',\n\n\tlogin: `${base}/try_login/`,\n\tlogin_method: 'POST',\n\n\tlogout: `${base}/try_logout/`,\n\tlogout_method: 'GET',\n\n\twork_order_add: `${base}/work_order_add/`,\n\twork_order_add_method: 'POST',\n\n\tcreateRequestOptions\n};\n\nmodule.exports = URL;\n\n/**\n * @param {URLName} name\n * @param {string} [csrfToken]\n * @return {JQueryAjaxSettings}\n */\nfunction createRequestOptions(name, csrfToken) {\n\tlet url = URL[name], method = URL[`${name}_method`];\n\t/**\n\t * @type {JQueryAjaxSettings}\n\t */\n\tlet options = { url, method, dataType: 'json' };\n\tif (method == 'POST') options.contentType = 'application/json';\n\t\n\t// options.xhrFields = { withCredentials: false};\n\toptions.crossDomain = false;\n\toptions.headers = { 'X-CSRFToken': csrfToken };\n\t\n\treturn options;\n}"
	]
}